---
date: 2018-04-23 18:33:12+00:00
layout: post
slug: assembly-sparseassembler-k-111-on-geoduck-sequence-data
title: Assembly â€“ SparseAssembler (k 111) on Geoduck Sequence Data
categories:
  - Geoduck Genome Sequencing
tags:
  - geoduck
  - mox
  - Panopea generosa
  - SparseAssembler
---

Continuing to try to find the best kmer setting to work with SparseAssemlber after [the last attempt failed due to a kmer size that was too large](https://robertslab.github.io/sams-notebook/2018/04/22/assembly-sparseassembler-k-131-on-geoduck-sequence-data.html) (k 131; which happens to be outside the max kmer size [127] for SparseAssembler), I re-ran SparseAssembler with an arbitrarily selected kmer size < 131 (picked k 111).

The job was run on our Mox HPC node.





  * Slurm script: [20180423_sparse_assembler_kmer111_geoduck_slurm.sh](https://owl.fish.washington.edu/Athaliana/20180423_sparseassembler_kmer111_geoduck/20180423_sparse_assembler_kmer111_geoduck_slurm.sh)





##### Results:



Output folder:





  * [20180423_sparseassembler_kmer111_geoduck/](https://owl.fish.washington.edu/Athaliana/20180423_sparseassembler_kmer111_geoduck/)



Slurm output file:



  * [20180423_sparseassembler_kmer111_geoduck/slurm-164530.out](https://owl.fish.washington.edu/Athaliana/20180423_sparseassembler_kmer111_geoduck/slurm-164530.out)



This failed with the following error message:

`Error! K-mer size too large!`

Well, this is disappointing. Not entirely sure why this is the case, as it's below the max kmer setting for SparseAssembler. However, I'm not terribly surprised, as [this happened previously (only using NovaSeq data) with a kmer setting of 117](https://robertslab.github.io/sams-notebook/2018/03/08/assembly-geoduck-novaseq-using-sparseassembler-failed.html).

I've posted [an issue on the kmergenie GitHub page](https://github.com/yechengxi/SparseAssembler/issues/4#issuecomment-383749554); we'll see what happens.
